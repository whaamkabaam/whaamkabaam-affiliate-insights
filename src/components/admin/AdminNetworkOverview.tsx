
import { useAffiliate } from "@/contexts/AffiliateContext";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { StatsCard } from "@/components/StatsCard";
import { DollarSign, Users, TrendingUp, Target } from "lucide-react";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow
} from "@/components/ui/table";

export const AdminNetworkOverview = () => {
  const { affiliateOverviews, isLoading } = useAffiliate();

  // Filter out admin from affiliate overviews - admin is not an affiliate
  const realAffiliates = affiliateOverviews.filter(affiliate => 
    affiliate.affiliateCode !== 'admin' && 
    affiliate.email !== 'admin@whaamkabaam.com'
  );

  // Calculate admin-level aggregated metrics
  const totalCommission = realAffiliates.reduce((sum, affiliate) => sum + (affiliate.totalCommission || 0), 0);
  const totalSales = realAffiliates.reduce((sum, affiliate) => sum + (affiliate.totalSales || 0), 0);
  const totalCustomers = realAffiliates.reduce((sum, affiliate) => sum + (affiliate.customerCount || 0), 0);

  // Helper function to get display commission rate
  const getDisplayCommissionRate = (affiliate: any) => {
    if (affiliate.affiliateCode === 'ayoub') {
      return '$20 flat';
    }
    return `${(affiliate.commissionRate * 100).toFixed(0)}%`;
  };

  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-2xl font-semibold tracking-tight">Network Overview</h2>
        <p className="text-muted-foreground">
          Complete overview of all affiliate performance
        </p>
      </div>

      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
        <StatsCard
          title="Total Network Commission"
          value={`$${totalCommission.toFixed(2)}`}
          description="Total earned across all affiliates"
          icon={<DollarSign className="w-4 h-4" />}
          className="bg-primary/5"
        />
        <StatsCard
          title="Total Network Sales"
          value={`$${totalSales.toFixed(2)}`}
          description="Total revenue generated by affiliates"
          icon={<TrendingUp className="w-4 h-4" />}
        />
        <StatsCard
          title="Total Customers"
          value={totalCustomers}
          description="Total customers across all affiliates"
          icon={<Users className="w-4 h-4" />}
        />
        <StatsCard
          title="Active Affiliates"
          value={realAffiliates.length}
          description="Currently active affiliate partners"
          icon={<Target className="w-4 h-4" />}
        />
      </div>

      <Card>
        <CardHeader>
          <CardTitle>Affiliate Performance Summary</CardTitle>
        </CardHeader>
        <CardContent>
          {isLoading ? (
            <div className="flex items-center justify-center py-8">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
            </div>
          ) : realAffiliates.length > 0 ? (
            <div className="border rounded-md overflow-hidden">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>Affiliate</TableHead>
                    <TableHead>Code</TableHead>
                    <TableHead>Commission Rate</TableHead>
                    <TableHead className="text-right">Total Sales</TableHead>
                    <TableHead className="text-right">Total Commission</TableHead>
                    <TableHead className="text-right">Customers</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {realAffiliates.map((affiliate, i) => (
                    <TableRow key={i}>
                      <TableCell className="font-medium">{affiliate.email}</TableCell>
                      <TableCell>
                        <span className="px-2 py-1 bg-secondary rounded text-sm">
                          {affiliate.affiliateCode}
                        </span>
                      </TableCell>
                      <TableCell>{getDisplayCommissionRate(affiliate)}</TableCell>
                      <TableCell className="text-right">${affiliate.totalSales?.toFixed(2) || "0.00"}</TableCell>
                      <TableCell className="text-right font-medium">${affiliate.totalCommission?.toFixed(2) || "0.00"}</TableCell>
                      <TableCell className="text-right">{affiliate.customerCount || 0}</TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </div>
          ) : (
            <div className="text-center py-8 text-muted-foreground">
              No affiliate data available.
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};
